# 스프링 어플리케이션 명이 본 인스턴스를 eureka server에 등록시킨다면 서비스명으로 사용된다.
spring.application.name=eureka
#server.port=8761

#### eureka instance/client
#eureka.instance.hostname=localhost

# 본 서비스를 eureka server에 만약 등록한다면, OS가 제공하는 hostname보다는 ip-address로 등록하도록 함
eureka.instance.prefer-ip-address=true

# 본 eureka client를 eureka 서버에 등록하여 다른 서비스에 노출시킬 것인가 여부
# standalone eureka server를 굳이 서비스로 노출시키고 싶지 않고, registration 및 lease-renewal 등의 client 프로세스를 겪지않도록 하고싶으면 비활성화
eureka.client.register-with-eureka=true

# eureka server로 부터 서비스 목록을 가져와 local caching 할것가 여부. eureka server + client인 인스턴스에 true 설정하고 시작시 서버가 완전히 드기전이므로 에러 발생.
eureka.client.fetch-registry=true

# 본 eureka client가 기본으로 자신을 등록하는 eureka server의 url. 본 프로젝트는 eureka server이자 client이기 때문에 기록.
#eureka.client.service-url.default-zone=http://${eureka.client.hostname}:${server.port}/eureka/
#eureka.client.service-url.default-zone=http://10.78.202.109:8761/eureka/,http://10.78.212.5:8761/eureka/
#eureka.client.service-url.default-zone=http://10.78.212.5:8761/eureka/

eureka.client.prefer-same-zone-eureka=true
#eureka.client.service-url.zone1=http://10.78.202.109:8761/eureka/
#eureka.client.service-url.zone2=http://10.78.212.5:8761/eureka/
eureka.client.service-url.zone1=http://127.0.0.1:8861/eureka/
eureka.client.service-url.zone2=http://127.0.0.1:8862/eureka/
eureka.client.region=region1
eureka.client.availability-zones.region1=zone1,zone2



#### eureka server (HA)
# eureka server peer간 초기화시에 registry sync가 실패하면 몇번 재시도 할것인지.
#eureka.server.registry-sync-retries=0

# peer eureka server로 부터 registry 정보를 sync 받을때 정보를 가져올수 없을때 대기시간.
#eureka.server.registry-sync-retry-wait-ms=0



#### eureka server self preservation
# 일시적인 network 장애로 인한 과다 eviction 방지.
#eureka.server.enable-self-preservation=true

# renew threshold 계산 간격 (15분)
#eureka.server.renewal-threshold-update-interval-ms=0

# self preservation 전환평가 간격 (6000 밀리초 주기)
#eureka.server.eviction-interval-timer-in-ms=0

# self preservation 발동 renew 비율
#eureka.server.renewal-percent-threshold=0.85



